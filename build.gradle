plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT'
    compileOnly 'top.shadowpixel:ShadowCore-spigot:1.3.0'
    compileOnly 'org.jetbrains:annotations:24.0.1'
    compileOnly 'me.clip:placeholderapi:2.11.3'
    compileOnly 'top.shadowpixel.shadowmessenger:ShadowMessenger-spigot:1.0'
    compileOnly 'top.shadowpixel:langswitcher:1.0'
    compileOnly 'com.github.LoneDev6:api-itemsadder:3.4.1e'

    //Lombok
    compileOnly "org.projectlombok:lombok:1.18.28"
    annotationProcessor "org.projectlombok:lombok:1.18.28"
}

group = 'top.shadowpixel'
version = '1.4.1'

java.sourceCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.withType(Jar).configureEach {
    destinationDirectory.set(file("E:\\服务器\\测试服务器\\Paper - 1.8.8\\plugins"))
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}